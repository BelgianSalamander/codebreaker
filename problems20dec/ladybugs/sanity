#! /usr/bin/env python3
import sys

def fail():
    print(0)
    sys.exit(0)

def ensure(x, mn, mx):
    if x < mn or x > mx: fail()

lines = list(filter(lambda l: l != "", [l.strip() for l in sys.stdin.readlines()]))

try:
    N,K,Q = map(int,lines[0].split(' '))
    bugs = list(map(int, lines[1].split(' ')))
    qs = list(map(int, lines[2].split(' ')))
except: fail()

# print(N, K, Q, bugs, qs)

MIN_N = 2;
MAX_N = 1e5;

MIN_K = 2;

MIN_Q = 1;
MAX_Q = 1e5;

MIN_P = 0;
MAX_P = 1e9;

ensure(N, MIN_N, MAX_N)
ensure(K, MIN_K, N)
ensure(Q, MIN_Q, MAX_Q)

# print("HERE")
if len(bugs) != N: fail()

for i in bugs: ensure(i,MIN_P, MAX_P)

for cur, nex in zip(bugs, bugs[1:]):
    if cur > nex: fail()

if len(qs) != Q: fail()
for i in qs: ensure(i, MIN_P, MAX_P)

print(1)
